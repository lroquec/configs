---

- name: Configure My Fedora :)
  gather_facts: true
  hosts: all
  vars:
    gnomedesktop: false
    nvidia_exists: false
    desktop_env: "@kde-desktop-environment"
    fedora_version: "37"
  tasks:
    - debug:
        msg: "user: {{ ansible_distribution_major_version }} - fedora major version: {{ ansible_user_id }}"

    - name: Speed up dnf
      become: true
      ansible.builtin.lineinfile:
        path:  /etc/dnf/dnf.conf
        state: present
        line: "{{ item }}"
        insertafter: EOF
        backup: true
      loop:
        - "max_parallel_downloads=10"
        - "fastestmirror=True"
        - "deltarpm=true" # not required. Create a backup file including the timestamp information so you can get the original file back if you somehow clobbered it incorrectly.

    - name: configure RPM fusion free repo
      ansible.builtin.command: 'dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm'
      become: true

    - name: Add Vivaldi repo
      ansible.builtin.command: 'dnf config-manager --add-repo https://repo.vivaldi.com/archive/vivaldi-fedora.repo'
      become: true

    - name: Prepare for vscode
      ansible.builtin.command: 'rpm --import https://packages.microsoft.com/keys/microsoft.asc'
      become: true

    - name: Install dependencies (dnf)
      become: true
      ansible.builtin.dnf:
        state: present 
        name:
          - libdrm
          - libX11-xcb
          - libxshmfence
          - mesa-libgbm
          - which
          - "{{ desktop_env }}"

    - name: configure desktop environment as default
      ansible.builtin.command: 'systemctl set-default graphical.target'
      become: true

    - name: Install VS Code repo (dnf)
      become: true
      ansible.builtin.yum_repository:
        name: code
        description: Visual Studio Code repo
        file: vscode
        baseurl: 'https://packages.microsoft.com/yumrepos/vscode'
        gpgkey: 'https://packages.microsoft.com}/keys/microsoft.asc'
        gpgcheck: true

    - name: configure RPM fusion nonfree repo
      ansible.builtin.command: 'dnf install -y https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm'
      become: true

    - name: add google-chrome repo
      become: true
      ansible.builtin.yum_repository:
        name: google-chrome
        description: Google Chrome repo
        file: google-chrome
        baseurl: 'https://dl.google.com/linux/chrome/rpm/stable/x86_64'
        gpgkey: 'https://dl.google.com/linux/linux_signing_key.pub'
        gpgcheck: true

    - name: add Virtualbox repo
      become: true
      ansible.builtin.yum_repository:
        name: virtualbox
        description: Virtualbox repo
        file: virtualbox
        baseurl: 'http://download.virtualbox.org/virtualbox/rpm/fedora/"{{ fedora_version }}"/\$basearch'
        gpgkey: 'https://www.virtualbox.org/download/oracle_vbox.asc'
        gpgcheck: true

    - name: configure google-chrome repo
      ansible.builtin.command: dnf config-manager --set-enabled google-chrome
      become: true

    - name: add opera key
      ansible.builtin.command: 'rpm --import https://rpm.opera.com/rpmrepo.key'
      become: true

    - name: configure opera repo
      ansible.builtin.command: dnf config-manager --add-repo https://rpm.opera.com/rpm
      become: true

    - name: configure docker repo
      ansible.builtin.command: dnf config-manager --add-repo https://download.docker.com/linux/fedora/docker-ce.repo
      become: true

    - name: clear dnf cache
      ansible.builtin.command: dnf clean all
      become: true

    - name: make dnf cache
      ansible.builtin.command: dnf makecache
      become: true

    - name: Update packages
      ansible.builtin.command: dnf update -y
      become: true

    - name: Separate Gnome Workspaces
      become_user: "{{ ansible_user_id }}"
      ansible.builtin.command: gsettings set org.gnome.shell.app-switcher current-workspace-only true
      when: gnomedesktop

    - name: Install base packages
      ansible.builtin.dnf:
        state: latest
        name: [
          'dnf-plugins-core',
          'fedora-workstation-repositories',
          'util-linux-user',
          'kernel-modules',
          'gcc',
          'rpmdevtools',
          'rpmlint',
          'make',
          'cmake',
          'git'
        ]
      become: true

    - name: Install Python Packages
      ansible.builtin.dnf:
        state: latest
        name: [
          'python3-pip',
          'python3-dnf',
          'python3-devel',
          'python3-libselinux',
          'python3-virtualenv'
        ]
      become: true

    - name: Install utilities
      ansible.builtin.dnf:
        state: latest
        name: [
          'vim',
          'google-chrome-stable',
          'copyq',
          'tldr',
          'htop',
          'thunderbird',
          'flameshot',
          'vlc',
          'curl',
          'wget',
          'gimp',
          'opera-stable',
          'transmission',
          'net-tools',
          'tcpdump',
          'locate',
          'tmux',
          'ranger',
          'neofetch',
          'trash-cli',
          'cmatrix',
          'ncdu',
          'unzip',
          'p7zip',
          'p7zip-plugins',
          'unrar',
          'google-roboto*',
          'mozilla-fira*',
          'fira-code-fonts',
          'tlp',
          'tlp-rdw',
          'vivaldi-stable',
          'code',
          'docker-ce',
          'docker-ce-cli',
          'containerd.io',
          'docker-compose-plugin',
          'rsync',
          'openconnect',
          'NetworkManager-openconnect',
          'openvpn',
          'NetworkManager-openvpn',
          'remmina',
          'libva-utils',
          'libva-vdpau-driver',
          'vdpauinfo',
          '@development-tools',
          'kernel-headers',
          'kernel-devel',
          'dkms',
          'elfutils-libelf-devel',
          'qt5-qtx11extras',
          'virtualbox'
        ]
      become: true
      ignore_errors: true

    - name: check docker is active
      ansible.builtin.service:
        name: dockerd
        state: started
        enabled: true
      become: true
      ignore_errors: true

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
      become: true

    - name: install zsh
      ansible.builtin.dnf:
        state: latest
        name: zsh
      become: true

    - name: install oh-my-zsh
      ansible.builtin.command: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'

    - name: change shell to zsh
      ansible.builtin.command: chsh -s /usr/bin/zsh

    - name: install `spaceship-prompt`
      ansible.builtin.command: 'git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$HOME/.oh-my-zsh/themes/spaceship-prompt" --depth=1'

    - name: symlink `spaceship.zsh-theme` to `oh-my-zsh` custom themes directory
      ansible.builtin.command: 'ln -s "$HOME/.oh-my-zsh/themes/spaceship-prompt/spaceship.zsh-theme" "$HOME/.oh-my-zsh/themes/spaceship.zsh-theme"'

    - name: install `zsh-autosuggestions` plugin 
      ansible.builtin.command: 'git clone https://github.com/zsh-users/zsh-autosuggestions $HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions'

    - name: Install NVIDIA Drivers
      ansible.builtin.dnf:
        state: latest
        name: 'akmod-nvidia'
      become: true
      when: nvidia_exists

    - name: Install gnome dependants
      ansible.builtin.dnf:
        state: latest
        name: "{{ item }}"
      loop:
        - gnome-extensions-app
        - gnome-shell-extension-dash-to-dock
        - gnome-font-viewer
        - gnome-tweak-tool
        - chrome-gnome-shell
        - gnome-tweaks
        - gnome-shell-extension-appindicator
        - NetworkManager-openconnect-gnome
        - NetworkManager-openvpn-gnome
        - remmina-gnome-session
      become: true
      when: gnomedesktop
      ignore_errors: true

    - name: Enable Battery percentage
      ansible.builtin.command: 'gsettings set org.gnome.desktop.interface show-battery-percentage true'
      become: true
      when: gnomedesktop

    - name: Disable SELinux
      ansible.posix.selinux:
        state: disabled
      become: true

    - name: Enable flatpak
      ansible.builtin.command: 'flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo'
      become: true

    - name: Remove libreoffice and firefox
      ansible.builtin.command: 'dnf remove -y libreoffice* firefox*'
      become: true

    - name: Install only libreoffice draw
      ansible.builtin.command: 'dnf install -y libreoffice-draw'

    - name: Clone dotfiles
      git:
        repo: https://github.com/lroquec/configs.git
        dest: "{{ ansible_env.HOME }}/configs"
        version: main
        force: true

    - name: Creating a symlink for vim
      ansible.builtin.file:
        src: '{{ ansible_env.HOME }}/configs/vimrc'
        dest: '{{ ansible_env.HOME }}/.vimrc'
        state: link

    - name: Delete previous vim folder
      ansible.builtin.file:
        path: '{{ ansible_env.HOME }}/.vim'
        state: absent

    - name: Creating a symlink for vim
      ansible.builtin.file:
        src: '{{ ansible_env.HOME }}/configs/vim'
        dest: '{{ ansible_env.HOME }}/.vim'
        state: link

    - name: Install vimplug for vim plugins
      shell: curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
      ignore_errors: true

    - name: Install vim plugins
      shell: vim -E -s -u "{{ ansible_env.HOME }}/.vimrc" +PlugInstall +qall
      ignore_errors: true

    - name: Delete previous ohmyzsh folder
      ansible.builtin.file:
        path: '{{ ansible_env.HOME }}/.oh-my-zsh'
        state: absent

    - name: Creating a symlink for ohmyzsh
      ansible.builtin.file:
        src: '{{ ansible_env.HOME }}/configs/oh-my-zsh'
        dest: '{{ ansible_env.HOME }}/.oh-my-zsh'
        state: link

    - name: Creating a symlink for zprofile
      ansible.builtin.file:
        src: '{{ ansible_env.HOME }}/configs/.zprofile'
        dest: '{{ ansible_env.HOME }}/.zprofile'
        state: link

    - name: Delete previous zshrc
      ansible.builtin.file:
        path: '{{ ansible_env.HOME }}/.zshrc'
        state: absent

    - name: Creating a symlink for zshrc
      ansible.builtin.file:
        src: '{{ ansible_env.HOME }}/configs/.zshrc'
        dest: '{{ ansible_env.HOME }}/.zshrc'
        state: link

    - name: Install nerd font hack
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.2.2/Hack.zip
        dest: /usr/local/share/fonts/
        remote_src: true
      become: true

    - name: Refresh fonts
      shell: fc-cache -fv
      ignore_errors: true
      become: true

    - name: install Zoom via flatpak
      community.general.flatpak:
        name: "{{ item }}"
        state: present
        method: system
      loop:
        - org.telegram.desktop
        - com.github.eneshecan.WhatsAppForLinux
        - com.usebottles.bottles
        - com.bitwarden.desktop
        - com.microsoft.Teams
        - org.onlyoffice.desktopeditors
        - org.mozilla.firefox

    - name: last steps script
      ansible.builtin.command: "bash {{ ansible_env.HOME }}/configs/postinstallfedora.sh"
